{"version":3,"sources":["components/Mobile/TopNavBar.tsx","routes/Home/index.tsx","store/home/action.ts"],"names":["TitleText","styled","text","StyledNavBar","NavBar","NavBarIcons","Icon","TopNavBar","title","leftIcon","leftIconComponent","rightComponent","mode","icon","type","color","onLeftClick","console","log","rightContent","MainContainer","div","Home","dispatch","useDispatch","sampleStateText","useSelector","state","home","useEffect","onClick","getState","HOME_PAGE_ACTIONS","SAMPLE_TEXT"],"mappings":"+tBAMA,IAAMA,EAAYC,IAAOC,KAAV,KASTC,EAAeF,YAAOG,IAAPH,CAAH,KAOZI,EAAcJ,YAAOK,IAAPL,CAAH,KA6CFM,IAnCf,YAUI,IATFC,EASC,EATDA,MACAC,EAQC,EARDA,SACAC,EAOC,EAPDA,kBACAC,EAMC,EANDA,eAOA,OACE,cAACR,EAAD,CACES,KAAK,QACLC,KACE,qCACGJ,GAAYC,GACXD,GACA,cAACJ,EAAD,CACES,KAAK,OAILC,MAAM,YAGV,cAACf,EAAD,UAAYQ,OAGhBQ,YAAa,kBAAMC,QAAQC,IAAI,gBAC/BC,aAAcR,M,mRCvDpB,IAAMS,EAAgBnB,IAAOoB,IAAV,KAKJ,SAASC,IACtB,IAAMC,EAAWC,cACTC,EAAoBC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,QAA5DH,gBAERI,qBAAU,cAEP,CAACN,IAEJ,IAAMd,EAAW,2CAMjB,OACE,eAACW,EAAD,WACE,cAACb,EAAA,EAAD,CAAWC,MAAO,cAAeE,kBAAmBD,IACpD,wBAAQqB,QAPU,WACpBP,GCHqC,SAACA,EAAiCQ,GAAwB,IACzFN,EAAoBM,IAAWH,KAA/BH,gBACRR,QAAQC,IAAI,SACZD,QAAQC,IAAIa,IAAWH,KAAKH,iBAC5BF,EAAS,CACPT,KAAMkB,IAAkBC,YACxBR,gBAAiBA,EAAkB,UDGjC,SAAiCA","file":"static/js/5.ee6365e2.chunk.js","sourcesContent":["import React, { ReactElement } from 'react'\nimport { NavBar, Icon } from 'antd-mobile'\nimport styled from 'styled-components'\n\nimport 'antd-mobile/dist/antd-mobile.css'\n\nconst TitleText = styled.text`\n  font-family: Inter;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 30px;\n  line-height: 14px;\n  color: #002642;\n  align-self: center;\n`\nconst StyledNavBar = styled(NavBar)`\n  &.am-navbar {\n    background-color: #fafaf4; !important\n  }\n  margin: 15px;\n  max-width:100%;\n`\nconst NavBarIcons = styled(Icon)`\n  &.am-icon-md {\n    width: 28px;\n    height: 28px;\n  }\n  padding-right: 11px;\n  width: 40px;\n  height: 40px;\n`\n// UNDONE, feel free to complete\nfunction TopNavBar({\n  title,\n  leftIcon,\n  leftIconComponent,\n  rightComponent,\n}: {\n  title: string\n  leftIcon?: true\n  leftIconComponent?: ReactElement\n  rightComponent?: ReactElement\n}) {\n  return (\n    <StyledNavBar\n      mode=\"light\"\n      icon={\n        <>\n          {leftIcon && leftIconComponent}\n          {!leftIcon && (\n            <NavBarIcons\n              type=\"left\"\n              // onClick={() => {\n              //   console.log('goback')\n              // }}\n              color=\"#002642\"\n            />\n          )}\n          <TitleText>{title}</TitleText>\n        </>\n      }\n      onLeftClick={() => console.log('onLeftClick')}\n      rightContent={rightComponent}\n    ></StyledNavBar>\n  )\n}\n\nexport default TopNavBar\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport TopNavBar from '../../components/Mobile/TopNavBar'\nimport { getUpdateMockString } from '../../store/home/action'\nimport { RootState } from '../../store/types'\n\nconst MainContainer = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: #fafaf4;\n`\nexport default function Home() {\n  const dispatch = useDispatch()\n  const { sampleStateText } = useSelector((state: RootState) => state.home)\n\n  useEffect(() => {\n    //do smth @ the start\n  }, [dispatch])\n\n  const leftIcon = <button>Hello</button>\n\n  const onButtonClick = () => {\n    dispatch(getUpdateMockString())\n  }\n\n  return (\n    <MainContainer>\n      <TopNavBar title={'NavBarTitle'} leftIconComponent={leftIcon} />\n      <button onClick={onButtonClick}>{sampleStateText}</button>\n    </MainContainer>\n  )\n}\n","import { Dispatch, GetState } from '../types'\nimport { ActionTypes, HOME_PAGE_ACTIONS, Account } from './types'\n// import { get, ENDPOINTS } from '../endpoints'\n\nexport const mockActionSetAccount = () => (dispatch: Dispatch<ActionTypes>) => {\n  // This is how you call an API\n  // get(ENDPOINTS.MOCK_ENDPOINT).then((resp) => {\n  //   const personalAccount = resp.data\n  //   dispatch({\n  //     type: HOME_PAGE_ACTIONS.SET_ACCOUNT,\n  //     personalAccount: personalAccount,\n  //   })\n  // })\n  const returnAccount = <Account>{}\n  dispatch({\n    type: HOME_PAGE_ACTIONS.SET_ACCOUNT,\n    account: returnAccount,\n  })\n}\n\nexport const getUpdateMockString = () => (dispatch: Dispatch<ActionTypes>, getState: GetState) => {\n  const { sampleStateText } = getState().home\n  console.log('Hello')\n  console.log(getState().home.sampleStateText)\n  dispatch({\n    type: HOME_PAGE_ACTIONS.SAMPLE_TEXT,\n    sampleStateText: sampleStateText + 'n',\n  })\n}\n"],"sourceRoot":""}