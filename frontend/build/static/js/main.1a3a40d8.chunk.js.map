{"version":3,"sources":["store/home/types.ts","store/home/reducer.ts","store/store.ts","components/LoadingSpin.tsx","routes/Routes.tsx","GlobalStyle.tsx","App.tsx","index.tsx"],"names":["HOME_PAGE_ACTIONS","initialState","Account","sampleStateText","rootReducer","combineReducers","home","state","action","type","SET_ACCOUNT","account","SAMPLE_TEXT","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","LoadingSpin","PATHS","antIcon","LoadingOutlined","style","fontSize","spin","indicator","Home","React","lazy","Login","Signup","FacilityBooking","Routes","Root","fallback","exact","path","HOME_PAGE","component","LOGIN_PAGE","SIGNUP_PAGE","FACILITY_BOOKING_MAIN","Component","styled","div","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"qGAUO,IAAKA,EAAZ,kC,SAAYA,K,4CAAAA,E,6CAAAA,M,iLCPNC,EAAe,CACnBC,QAAS,KACTC,gBAAiB,QCCNC,EAAcC,0BAAgB,CAAEC,KDOI,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCACjF,OAAQA,EAAOC,MACb,KAAKT,IAAkBU,YACrB,OAAO,2BACFH,GADL,IAEEI,QAASH,EAAOG,UAIpB,KAAKX,IAAkBY,YACrB,OAAO,2BACFL,GADL,IAEEJ,gBAAiBK,EAAOL,kBAI5B,QACE,OAAOI,MCvBPM,EAAc,CAACC,KAGNC,EAFDC,sBAAYZ,EAAaa,8BAAoBC,kBAAe,WAAf,EAAmBL,K,uCCC/DM,ICJHC,EDIGD,EALf,WACE,IAAME,EAAU,cAACC,EAAA,EAAD,CAAiBC,MAAO,CAAEC,SAAU,IAAMC,MAAI,IAC9D,OAAO,cAAC,IAAD,CAAMC,UAAWL,K,gGCDdD,K,cAAAA,E,oBAAAA,E,sBAAAA,E,kCAAAA,E,+BAAAA,E,oCAAAA,M,KAYZ,IAAMO,EAAOC,IAAMC,MAAK,kBAAM,uDAExBC,EAAQF,IAAMC,MAAK,kBAAM,iCACzBE,EAASH,IAAMC,MAAK,kBAAM,iCAE1BG,EAAkBJ,IAAMC,MAAK,kBAAM,uDACpBI,E,uKAEjB,OACE,cAACC,EAAD,UACE,cAAC,WAAD,CAAUC,SAAUhB,EAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAMjB,EAAMkB,UAAWC,UAAWZ,IAC/C,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAMjB,EAAMoB,WAAYD,UAAWT,IAChD,cAAC,IAAD,CAAOM,OAAK,EAACC,KAAMjB,EAAMqB,YAAaF,UAAWR,IACjD,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAMjB,EAAMsB,sBAAuBH,UAAWP,e,GATnCJ,IAAMe,WAiBpCT,EAAOU,IAAOC,IAAV,K,uECtCV,IAGeC,EAHKC,YAAH,KCoBFC,E,uKAXX,OACE,eAAC,IAAD,CAAUjC,MAAOA,EAAjB,UACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,EAAD,a,GANQa,IAAMe,WCLxBM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1a3a40d8.chunk.js","sourcesContent":["export type Account = {\n  personalDetails: {\n    availableBalance: string\n  }\n  cca: []\n  settings: {\n    notifications: boolean\n  }\n}\n\nexport enum HOME_PAGE_ACTIONS {\n  SET_ACCOUNT = 'HOME_PAGE_ACTIONS.SET_ACCOUNT',\n  SAMPLE_TEXT = 'HOME_PAGE_ACTIONS.SAMPLE_TEXT',\n}\n\ntype SetAccount = {\n  type: typeof HOME_PAGE_ACTIONS.SET_ACCOUNT\n  account: Account\n}\n\ntype getSampleText = {\n  type: typeof HOME_PAGE_ACTIONS.SAMPLE_TEXT\n  sampleStateText: string\n}\n\nexport type ActionTypes = SetAccount | getSampleText\n","import { Reducer } from 'redux'\nimport { ActionTypes, HOME_PAGE_ACTIONS, Account } from './types'\n\nconst initialState = {\n  Account: null,\n  sampleStateText: 'Hola',\n}\n\ntype State = {\n  Account: Account | null\n  sampleStateText: string\n}\n\nexport const home: Reducer<State, ActionTypes> = (state = initialState, action) => {\n  switch (action.type) {\n    case HOME_PAGE_ACTIONS.SET_ACCOUNT: {\n      return {\n        ...state,\n        account: action.account,\n      }\n    }\n\n    case HOME_PAGE_ACTIONS.SAMPLE_TEXT: {\n      return {\n        ...state,\n        sampleStateText: action.sampleStateText,\n      }\n    }\n\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport { home } from './home/reducer'\n\nexport const rootReducer = combineReducers({ home })\nconst middlewares = [thunk]\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)))\n\nexport default store\n","import React from 'react'\nimport { Spin } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\n\nfunction LoadingSpin() {\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\n  return <Spin indicator={antIcon} />\n}\n\nexport default LoadingSpin\n","import React, { Suspense } from 'react'\nimport styled from 'styled-components'\nimport { Route, Switch } from 'react-router-dom'\nimport LoadingSpin from '../components/LoadingSpin'\n\nexport enum PATHS {\n  // MAIN LANDING PAGE\n  HOME_PAGE = '/',\n  // AUTHENTICATION\n  LOGIN_PAGE = '/login',\n  SIGNUP_PAGE = '/signup',\n  // FACILITY BOOKING\n  FACILITY_BOOKING_MAIN = '/facility',\n  VIEW_FACILITY = '/facility/view', // TO BE UPDATES\n  CREATE_FACILITY = '/facility/create',\n}\n\nconst Home = React.lazy(() => import(/* webpackChunckName: \"Home\" */ './Home'))\n// AUTHENTICATION\nconst Login = React.lazy(() => import(/* webpackChunckName: \"Login\" */ './Authentication/Login'))\nconst Signup = React.lazy(() => import(/* webpackChunckName: \"Signup\" */ './Authentication/Signup'))\n// FACILITY BOOKING\nconst FacilityBooking = React.lazy(() => import(/* webpackChunckName: \"Signup\" */ './FacilityBooking'))\nexport default class Routes extends React.Component {\n  render() {\n    return (\n      <Root>\n        <Suspense fallback={LoadingSpin}>\n          <Switch>\n            <Route exact path={PATHS.HOME_PAGE} component={Home} />\n            <Route exact path={PATHS.LOGIN_PAGE} component={Login} />\n            <Route exact path={PATHS.SIGNUP_PAGE} component={Signup} />\n            <Route exact path={PATHS.FACILITY_BOOKING_MAIN} component={FacilityBooking} />\n          </Switch>\n        </Suspense>\n      </Root>\n    )\n  }\n}\n\nconst Root = styled.div`\n  z-index: 0;\n`\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n`\n\nexport default GlobalStyle\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport store from './store/store'\nimport Routes from './routes/Routes'\n\nimport GlobalStyle from './GlobalStyle'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <GlobalStyle />\n        <BrowserRouter>\n          <Routes />\n        </BrowserRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}